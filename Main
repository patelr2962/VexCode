/*
Index:

Joystick Mapping:

Joystick 1:

Channel 1: 
Channel 2: 
Channel 3: 
Channel 4: 
Channel 5: 
Channel 6: 
Channel 7:
U = 
R = 
D = 
L =  
Channel 8:
U = 
R = 
D = 
L = 

Joystick 2:

Channel 1: 
Channel 2: 
Channel 3: 
Channel 4: 
Channel 5: 
Channel 6: 
Channel 7:
U = 
R = 
D = 
L = 
Channel 8:
U = 
L = 
R = 
D = 
*/

//Potentiometer based straightening
void liftStraight()
{
	int highLift;
	highLift = 80;

	int normLift;
	normLift = 93;

	if(SensorValue[leftPmeter] > SensorValue[rightPmeter])
	{
 		motor[leftLift] = highLift;
 		motor[rightLift] = normLift;
	}
	if(SensorValue[leftPmeter] < SensorValue[rightPmeter])
	{
 		motor[leftLift] = normLift;
 		motor[rightLift] = highLift;
	}
	if(SensorValue[leftPmeter] == SensorValue[rightPmeter])
	{
		motor[leftLift] = normLift;
 		motor[rightLift] = normLift;
	}
}

/*
//Encoder based straightening
void moveStraight()
{
	int quickMotor;
	quickMotor = 50;

	int normMotor;
	normMotor = 63;

	if(SensorValue[leftEncoder] > SensorValue[rightEncoder])
	{
		motor[leftBase] = quickMotor;
		motor[rightBase] = normMotor;
	}
	if(SensorValue[leftEncoder] < SensorValue[rightEncoder])
	{
		motor[leftBase] = normMotor;
		motor[rightBase] = quickMotor;
	}
	if(SensorValue[leftEncoder] == SensorValue[rightEncoder])
	{
		motor[leftBase] = normMotor;
		motor[rightBase] = normMotor;
	}
}

//Encoder clearing function
void clearEncoders()
{
	SensorValue[leftEncoder] = 0;
	SensorValue[rightEncoder] = 0;
}
*/

task main()
{
	/*while(SensorValue[leftPmeter] < 4000)
	{
	liftStraight();
	}*/

	while(true)
	{
		//Robot Movement
		motor[leftBase] = (vexRT[Ch2] + vexRT[Ch1])/2;
		motor[rightBase] = (vexRT[Ch2] - vexRT[Ch1])/2;

		//Claw Controls
		if(vexRT[Btn6U] == 1)
		{
			motor[clawMotor] = 127;
		}
		else if(vexRT[Btn6D] == 1)
		{
			motor[clawMotor] = -127;
		}
		else
		{
			motor[clawMotor] = 0;
		}
		//Lift Controls
		if(vexRT[Btn5U] == 1)
		{
			liftStraight();
			/*motor[rightLift] = normLift;
			motor[leftLift] = normLift;*/
		}
		else if(vexRT[Btn5D] == 1)
		{
			motor[rightLift] = -normLift;
			motor[leftLift] = -normLift;
		}
		else
		{
			motor[rightLift] = 0;
			motor[leftLift] = 0;
		}
	}
}
